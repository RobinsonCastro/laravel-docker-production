services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - ./backend:/var/www:delegated
    depends_on:
      - db
    networks:
      - web

  queue-worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    command: php artisan queue:work
    environment:
      IS_WORKER: "true"
    env_file:
      - ./backend/.env
    depends_on:
      - db
      - redis
    volumes:
      - ./backend:/var/www:delegated
    networks:
      - web

  nginx:
    image: nginx:1.29-alpine
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/templates/default.conf.template
      - storage:/var/www/storage:rw
      - public:/var/www/public:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx.rule=Host(`robinsoncastro.com`) || Host(`www.robinsoncastro.com`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=lets-encrypt"
      - "traefik.http.services.nginx.loadbalancer.server.port=80"
      - "traefik.docker.network=web"
    networks:
      - web
    expose:
      - "80"

  reverb:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: php artisan reverb:start
    restart: unless-stopped
    env_file:
      - ./backend/.env
    volumes:
      - storage:/usr/share/nginx/html/storage:rw
      - public:/usr/share/nginx/html/public:rw
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.reverb.rule=Host(`robinsoncastro.com`) || Host(`www.robinsoncastro.com`)"
      - "traefik.http.routers.reverb.entrypoints=websecure"
      - "traefik.http.routers.reverb.tls.certresolver=lets-encrypt"
      - "traefik.http.routers.reverb.service=reverb"
      - "traefik.http.routers.reverb.middlewares=reverb-headers"
      - "traefik.http.services.reverb.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.reverb-headers.headers.customrequestheaders.Connection=upgrade"
      - "traefik.http.middlewares.reverb-headers.headers.customrequestheaders.Upgrade=websocket"
      - "traefik.docker.network=web"
    networks:
      - web
    expose:
      - "8080"

  db:
    image: bitnami/postgresql:16.3.0
    platform: linux/amd64
    ports:
      - 5432:5432
    restart: always
    volumes:
      - db-data:/bitnami/postgresql
    environment:
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}

  redis:
    image: bitnami/redis:7.2
    platform: linux/amd64
    ports:
      - 6379:6379
    restart: always
    volumes:
      - redis-data:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=no
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL

volumes:
  db-data:
  redis-data:

networks:
  web:
    external: true
